<?php
/**
 * @file
 * Code for the Sierragraphs feature.
 */

include_once 'sierragraphs.features.inc';

/**
 * Implements hook_menu().
 */
function sierragraphs_menu() {
  $items['admin/config/system/sierragraphs'] = array(
    'title' => 'Sierragraphs',
    'description' => 'API credentials and other options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sierragraphs_auth_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'sierragraphs.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function sierragraphs_form_alter(&$form, &$form_state, $form_id) {
  if(isset($form['field_booklist'])) {
    array_unshift($form['actions']['submit']['#submit'], 'sierragraphs_populate_submit');
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function sierragraphs_field_widget_form_alter(&$element, &$form_state, $context) {
  // Hide certain fields during node create
  if(!isset($form_state['node']->nid)) {
    if(isset($element['#field_name'])) {
      $sierragraphs_fields = array('title', 'author', 'summary', 'material_type', 'isbn', 'data');
      hide_sierragraphs_fields($element, $sierragraphs_fields);

      // Add validation to bib_id
      if($element['#field_name'] == 'field_sierragraphs_bib_id') {
        $element['#element_validate'][] = 'sierragraphs_bib_id_validate';
      }
    }
    // Jacket field is special case
    if(isset($element[0]) && $element[0]['#field_name'] == 'field_sierragraphs_jacket') {
      $element['#access'] = FALSE;
    }
  }
  else { // Hide certain fields during node edit
    if(isset($element['#field_name'])) {
      $sierragraphs_fields = array('bib_id', 'material_type', 'isbn', 'data');
      hide_sierragraphs_fields($element, $sierragraphs_fields);
    }
  }
}

/*
 * Iterates through an array of fields to hide them
 */
function hide_sierragraphs_fields(&$element, $sierragraphs_fields) {
  foreach ($sierragraphs_fields as $field) {
    if ($element['#field_name'] == 'field_sierragraphs_'.$field) {
      $element['#access'] = FALSE;
    }
  }
}

/*
 * Implements hook_validate().
 */
function sierragraphs_bib_id_validate($element, &$form_state, $complete_form) {
  $bib_id = preg_match('/[0-9]{7}/', $element['value']['#value'], $matches);
  if (!$bib_id) {
    form_error($element, t('The bib ID field must contain a 7 digit bib number.'));
  }
  else { // Strip value down to bib_id
    form_set_value($element, array('value' => $matches[0]), $form_state);
    sierragraphs_populate_with_data(NULL,$form_state);
  }
}

/*
 * Implements hook_submit().
 */
function sierragraphs_populate_submit($form, &$form_state) {
  sierragraphs_populate_with_data($form, $form_state);
}

function sierragraphs_populate_with_data($form, &$form_state) {
  $data = sierragraphs_get_bib_object($form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_bib_id'][LANGUAGE_NONE][0]['value']);

  $form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_data'][LANGUAGE_NONE][0]['value'] = json_encode($data);
  $form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_title'][LANGUAGE_NONE][0]['value'] = $data->title;
  $form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_author'][LANGUAGE_NONE][0]['value'] = sierragraphs_format_author($data->author);
  $form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_material_type'][LANGUAGE_NONE][0]['value'] = $data->materialType->value;

  foreach($data->varFields as $field) {
    if(isset($field->marcTag)) {
      if ($field->marcTag == '020') {
        foreach ($field->subfields as $sub) {
          if ($sub->tag == 'a') {
            $form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_isbn'][LANGUAGE_NONE][0]['value'] = $sub->content;
          }
        }
      }
      elseif ($field->marcTag == '520') {
        foreach ($field->subfields as $sub) {
          if ($sub->tag == 'a') {
            $form_state['values']['field_booklist'][LANGUAGE_NONE][0]['field_sierragraphs_summary'][LANGUAGE_NONE][0]['value'] = $sub->content;
          }
        }
      }
    }
  }

}

/*
 * Queries Sierra for bib object
 */
function sierragraphs_get_bib_object($bib_id) {
  module_load_include('inc', 'sierragraphs', 'sierragraphs.admin');
  // This URL queries Sierra with the default fields + all variable fields
  $url = 'https://' . variable_get('sierragraphs_auth_host', '') . '/iii/sierra-api/v1/bibs/' . $bib_id . '?fields=default,varFields';

  $token = sierragraphs_auth_token();
  $headers = array(
    'Authorization' => 'Bearer ' . $token,
  );
  $options = array('headers' => $headers);

  $response = drupal_http_request($url, $options);

  return json_decode($response->data);
}

/*
 * Does string reordering on the author returned from Sierra
 */
function sierragraphs_format_author($author = '') {
  if(strpos('author', ',') !== FALSE ) {
    $author_array = explode(',', $author);
    $author = '';
    foreach($author_array as $a) {
      $author = $a . ' ' . $author;
    }
  }
  return trim($author);
}