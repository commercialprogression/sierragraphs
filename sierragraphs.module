<?php
/**
 * @file
 * Code for the Sierragraphs feature.
 */

include_once 'sierragraphs.features.inc';

/**
 * Implements hook_menu().
 */
function sierragraphs_menu() {
  $items['admin/config/system/sierragraphs'] = array(
    'title' => 'Sierragraphs',
    'description' => 'API credentials and other options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sierragraphs_auth_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'sierragraphs.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_field_widget_form_alter().
 */
function sierragraphs_field_widget_form_alter(&$element, &$form_state, $context) {
  // Hide certain fields during node create, or during add more button on node edit
  if(!isset($form_state['node']->nid) ||
      (((isset($element['value']['#entity']->is_new) && $element['value']['#entity']->is_new) ||
      ((isset($element[0]['#entity']->is_new) && $element[0]['#entity']->is_new))) &&
      (isset($form_state['clicked_button']) && strpos($form_state['clicked_button']['#name'], '_add_more') !== FALSE))) {
    if(isset($element['#field_name'])) {
      $sierragraphs_fields = array('title', 'author', 'summary', 'material_type', 'isbn', 'data');
      hide_sierragraphs_fields($element, $sierragraphs_fields);

      // Add validation to bib_id
      if($element['#field_name'] == 'field_sierragraphs_bib_id') {
        $element['#element_validate'][] = 'sierragraphs_bib_id_validate';
      }
    }
    // Jacket field is special case
    if(isset($element[0]) && $element[0]['#field_name'] == 'field_sierragraphs_jacket') {
      $element['#access'] = FALSE;
    }
  }
  else { // Hide certain fields during node edit
    if(isset($element['#field_name'])) {
      $sierragraphs_fields = array('bib_id', 'material_type', 'isbn', 'data');
      hide_sierragraphs_fields($element, $sierragraphs_fields);
    }
  }
}

/*
 * Iterates through an array of fields to hide them
 */
function hide_sierragraphs_fields(&$element, $sierragraphs_fields) {
  foreach ($sierragraphs_fields as $field) {
    if ($element['#field_name'] == 'field_sierragraphs_'.$field) {
      $element['#access'] = FALSE;
    }
  }
}

/*
 * Implements hook_validate().
 */
function sierragraphs_bib_id_validate($element, &$form_state, $complete_form) {
  $bib_id = preg_match('/[0-9]{7}/', $element['value']['#value'], $matches);
  if (!$bib_id) {
    form_error($element, t('The bib ID field must contain a 7 digit bib number.'));
  }
  else { // Strip value down to bib_id and populate rest of form
    form_set_value($element, array('value' => $matches[0]), $form_state);
    $sierra_data = sierragraphs_populate_with_data($matches[0]);
    if (!empty($sierra_data) && isset($sierra_data['data'])) {
      $sierragraphs_fields = array('data', 'title', 'author', 'summary', 'material_type', 'isbn');
      foreach($sierragraphs_fields as $field) {
        sierragraphs_set_value($form_state, $element, $field, 'value', $sierra_data);
      }
      sierragraphs_set_value($form_state, $element, 'jacket', 'fid', $sierra_data);
    }
    else {
      form_error($element, t('The bib ID has no data.'));
    }
  }
}

/*
 * Generic function for form_set_value
 */
function sierragraphs_set_value(&$form_state, $element, $name, $property, $sierra_data) {
  if(isset($sierra_data[$name]) && $property != 'fid') {
    form_set_value(sierragraphs_set_element_parents($element, 'field_sierragraphs_' . $name),
      array($property => $sierra_data[$name]), $form_state);
  }
  elseif($property == 'fid' && isset($sierra_data['isbn'])) {
    form_set_value(sierragraphs_set_element_parents($element, 'field_sierragraphs_' . $name),
      array($property => sierragraphs_get_jacket($sierra_data['isbn'])), $form_state);
  }
}

/*
 * We use this to trick form_set_value into setting the field we want
 */
function sierragraphs_set_element_parents($element, $name) {
  $element['#parents'][3] = $name;
  return $element;
}

/*
 * Takes the bib_id and returns an array with the fields we care about
 */
function sierragraphs_populate_with_data($bib_id) {
  $data = sierragraphs_get_bib_object($bib_id);
  $sierra_data = array();

  if (!empty($data) && isset($data->title) && isset($data->author) && isset($data->materialType->value)) {
    $sierra_data['data'] = json_encode($data);
    $sierra_data['title'] = $data->title;
    $sierra_data['material_type'] = $data->materialType->value;

    foreach ($data->varFields as $field) {
      if (isset($field->marcTag)) {
        if ($field->marcTag == '020' && isset($field->subfields)) {
          foreach ($field->subfields as $sub) {
            if (isset($sub->tag) && $sub->tag == 'a') {
              $sierra_data['isbn'] = $sub->content;
              break;
            }
          }
        }
        elseif ($field->marcTag == '520' && isset($field->subfields)) {
          foreach ($field->subfields as $sub) {
            if (isset($sub->tag) && $sub->tag == 'a') {
              $sierra_data['summary'] = $sub->content;
              break;
            }
          }
        }
        elseif ($field->marcTag == '100' && isset($field->subfields)) {
          foreach ($field->subfields as $sub) {
            if (isset($sub->tag) && $sub->tag =='a') {
              $sierra_data['author'] = sierragraphs_format_author($sub->content);
              break;
            }
          }
        }
      }
    }
  }

  return $sierra_data;
}

/*
 * Queries Sierra for bib object
 */
function sierragraphs_get_bib_object($bib_id) {
  module_load_include('inc', 'sierragraphs', 'sierragraphs.admin');

  $host = variable_get('sierragraphs_auth_host', '');
  if (empty($host)) {
    return array();
  }
  // This URL queries Sierra with the default fields + all variable fields
  $url = 'https://' . $host . '/iii/sierra-api/v1/bibs/' . $bib_id . '?fields=default,varFields';

  $token = sierragraphs_auth_token();
  $headers = array(
    'Authorization' => 'Bearer ' . $token,
  );
  $options = array('headers' => $headers);
  $response = drupal_http_request($url, $options);
  return json_decode($response->data);
}

/*
 * Does string reordering on the author returned from Sierra
 */
function sierragraphs_format_author($author = '') {
  if(strpos($author, ',') !== FALSE ) {
    $author_array = explode(',', $author);
    $author = '';
    foreach($author_array as $a) {
      $author = $a . ' ' . $author;
    }
  }
  return trim($author);
}

/*
 * Queries Syndetics for our jacket image, saves it, and returns the fid
 */
function sierragraphs_get_jacket($isbn) {
  $dest = trim($isbn) . '.jpg';
  $syndetics_url = 'http://www.syndetics.com/index.aspx?client=CANT&isbn=' . trim($isbn) . '/LC.jpg';
  $image = @file_get_contents($syndetics_url);
  if (strlen($image) > 2000) {
    $filename = file_save_data($image, 'public://'.$dest);
    // We need to set the record in the file usage table if we are importing more than 1 book
    // The last parameter should be the node id, but we don't have one
    file_usage_add($filename, 'node', 'node', $filename->fid);
    return $filename->fid;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_preprocess_field().
 */
function sierragraphs_preprocess_field(&$variables, $hook) {
  if ($variables['element']['#field_name'] == 'field_sierragraphs_title' &&
      !empty($host = variable_get('sierragraphs_auth_host', ''))) {
    if (isset($variables['element']['#object']->field_sierragraphs_bib_id[LANGUAGE_NONE][0]['value'])) {

      $bib_id = $variables['element']['#object']->field_sierragraphs_bib_id[LANGUAGE_NONE][0]['value'];
      // If somehow bib ID wasn't saved as just a number, strip it back out
      preg_match('/[0-9]{7}/', $bib_id, $matches);

      $variables['items'][0]['#markup'] =
        l($variables['items'][0]['#markup'], 'http://' . $host . '/record=b' . $matches[0]);
    }
  }
}